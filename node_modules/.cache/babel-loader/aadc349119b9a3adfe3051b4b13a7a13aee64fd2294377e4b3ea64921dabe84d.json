{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/Users/giris/Desktop/togg_odev/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/Users/giris/Desktop/togg_odev/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport { CarSpeedLevel } from './types';\nimport utils from './utils';\nimport constants from './constants';\nvar _currentLocationStep = /*#__PURE__*/_classPrivateFieldLooseKey(\"currentLocationStep\");\nvar _isStarted = /*#__PURE__*/_classPrivateFieldLooseKey(\"isStarted\");\nvar _changingSpeed = /*#__PURE__*/_classPrivateFieldLooseKey(\"changingSpeed\");\nvar _speedLevel = /*#__PURE__*/_classPrivateFieldLooseKey(\"speedLevel\");\nvar _timer = /*#__PURE__*/_classPrivateFieldLooseKey(\"timer\");\nclass Backend {\n  constructor() {\n    Object.defineProperty(this, _currentLocationStep, {\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, _isStarted, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _changingSpeed, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _speedLevel, {\n      writable: true,\n      value: CarSpeedLevel.SLOW\n    });\n    Object.defineProperty(this, _timer, {\n      writable: true,\n      value: null\n    });\n    this.onTick = this.onTick.bind(this);\n  }\n  onTick() {\n    _classPrivateFieldLooseBase(this, _currentLocationStep)[_currentLocationStep] = (_classPrivateFieldLooseBase(this, _currentLocationStep)[_currentLocationStep] + 1) % constants.carPositions.length;\n    const targetCarPos = constants.carPositions[_classPrivateFieldLooseBase(this, _currentLocationStep)[_currentLocationStep]];\n    const carPosition = {\n      x: targetCarPos.x,\n      y: targetCarPos.y,\n      orientation: targetCarPos.orientation\n    };\n    document.dispatchEvent(new CustomEvent('carPositionAndSpeedChanged', {\n      detail: {\n        carPosition,\n        speed: targetCarPos.speed * _classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel]\n      }\n    }));\n  }\n  restartInterval() {\n    if (_classPrivateFieldLooseBase(this, _timer)[_timer]) {\n      clearInterval(_classPrivateFieldLooseBase(this, _timer)[_timer]);\n    }\n    _classPrivateFieldLooseBase(this, _timer)[_timer] = setInterval(this.onTick, utils.speedLevelToMs(_classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel]));\n  }\n  async getInitialCarPositionAndSpeed() {\n    if (_classPrivateFieldLooseBase(this, _isStarted)[_isStarted]) {\n      throw new Error('Backend is already started');\n    }\n    await utils.waitFor(Math.random() * 3000);\n    if (!_classPrivateFieldLooseBase(this, _isStarted)[_isStarted]) {\n      _classPrivateFieldLooseBase(this, _isStarted)[_isStarted] = true;\n      this.restartInterval();\n    }\n    const targetCarPos = constants.carPositions[_classPrivateFieldLooseBase(this, _currentLocationStep)[_currentLocationStep]];\n    const carPosition = {\n      x: targetCarPos.x,\n      y: targetCarPos.y,\n      orientation: targetCarPos.orientation\n    };\n    return {\n      carPosition,\n      speedLevel: _classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel]\n    };\n  }\n  async changeSpeed() {\n    if (_classPrivateFieldLooseBase(this, _changingSpeed)[_changingSpeed]) {\n      throw new Error('Backend is already changing speed');\n    }\n    _classPrivateFieldLooseBase(this, _changingSpeed)[_changingSpeed] = true;\n    await utils.waitFor(Math.random() * 3000);\n    if (_classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel] < 3) {\n      _classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel]++;\n    } else {\n      _classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel] = 1;\n    }\n    _classPrivateFieldLooseBase(this, _changingSpeed)[_changingSpeed] = false;\n    document.dispatchEvent(new CustomEvent('speedLevelChanged', {\n      detail: {\n        speedLevel: _classPrivateFieldLooseBase(this, _speedLevel)[_speedLevel]\n      }\n    }));\n    this.restartInterval();\n  }\n}\nexport default new Backend();","map":{"version":3,"names":["CarSpeedLevel","utils","constants","_currentLocationStep","_classPrivateFieldLooseKey","_isStarted","_changingSpeed","_speedLevel","_timer","Backend","constructor","Object","defineProperty","writable","value","SLOW","onTick","bind","_classPrivateFieldLooseBase","carPositions","length","targetCarPos","carPosition","x","y","orientation","document","dispatchEvent","CustomEvent","detail","speed","restartInterval","clearInterval","setInterval","speedLevelToMs","getInitialCarPositionAndSpeed","Error","waitFor","Math","random","speedLevel","changeSpeed"],"sources":["C:/Users/giris/Desktop/togg_odev/src/backend/index.ts"],"sourcesContent":["import type {CarPosition} from './types';\r\nimport {CarPositionAndSpeedLevel, CarSpeedLevel} from './types';\r\nimport utils from './utils';\r\nimport constants from './constants';\r\n\r\nclass Backend {\r\n  #currentLocationStep = 0;\r\n  #isStarted = false;\r\n  #changingSpeed = false;\r\n  #speedLevel: number = CarSpeedLevel.SLOW;\r\n  #timer: NodeJS.Timer | null = null;\r\n\r\n  constructor() {\r\n    this.onTick = this.onTick.bind(this)\r\n  }\r\n\r\n\r\n  private onTick() {\r\n    this.#currentLocationStep = (this.#currentLocationStep + 1) % constants.carPositions.length;\r\n\r\n    const targetCarPos = constants.carPositions[this.#currentLocationStep];\r\n    const carPosition: CarPosition = {\r\n      x: targetCarPos.x,\r\n      y: targetCarPos.y,\r\n      orientation: targetCarPos.orientation,\r\n    };\r\n\r\n    document.dispatchEvent(new CustomEvent('carPositionAndSpeedChanged', {\r\n      detail: {\r\n        carPosition,\r\n        speed: targetCarPos.speed * this.#speedLevel,\r\n      },\r\n    }));\r\n  }\r\n\r\n  private restartInterval() {\r\n    if (this.#timer) {\r\n      clearInterval(this.#timer);\r\n    }\r\n\r\n    this.#timer = setInterval(this.onTick, utils.speedLevelToMs(this.#speedLevel));\r\n  }\r\n\r\n  public async getInitialCarPositionAndSpeed(): Promise<CarPositionAndSpeedLevel> {\r\n    if(this.#isStarted) {\r\n      throw new Error('Backend is already started');\r\n    }\r\n\r\n    await utils.waitFor(Math.random() * 3000);\r\n\r\n    if (!this.#isStarted) {\r\n      this.#isStarted = true;\r\n      this.restartInterval();\r\n    }\r\n\r\n    const targetCarPos = constants.carPositions[this.#currentLocationStep];\r\n    const carPosition: CarPosition = {\r\n      x: targetCarPos.x,\r\n      y: targetCarPos.y,\r\n      orientation: targetCarPos.orientation,\r\n    };\r\n\r\n    return {\r\n      carPosition,\r\n      speedLevel: this.#speedLevel\r\n    };\r\n  }\r\n\r\n  public async changeSpeed(): Promise<void> {\r\n    if(this.#changingSpeed) {\r\n      throw new Error('Backend is already changing speed');\r\n    }\r\n\r\n    this.#changingSpeed = true;\r\n    await utils.waitFor(Math.random() * 3000);\r\n\r\n    if(this.#speedLevel < 3) {\r\n      this.#speedLevel++;\r\n    } else {\r\n      this.#speedLevel = 1;\r\n    }\r\n\r\n    this.#changingSpeed = false;\r\n    document.dispatchEvent(new CustomEvent('speedLevelChanged', {detail: {speedLevel: this.#speedLevel}}));\r\n    this.restartInterval();\r\n  }\r\n\r\n}\r\n\r\nexport default new Backend();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}